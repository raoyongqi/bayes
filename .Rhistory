devtools::install_github("bupaverse/bupaRminer")
library(pm4py)
install.packages("pm4py")
library(pm4py)
library(pm4py)
install.packages("pm4py")
# 加载必要的库
library(vegan)
library(linkET)
library(corrr)
library(ggplot2)
# 读取数据
file_path <- "C:/Users/r/Desktop/bayes/data/selection.csv"  # 替换为你的文件路径
df <- read.csv(file_path)
# 删除 'RATIO' 列
df$Plant.Disease <- df$RATIO
df <- df[, !names(df) %in% c("RATIO")]
# 选择所有自变量（除去因变量）
X <- df[, setdiff(names(df), "Plant.Disease")]
# 提取因变量
y <- df$Plant.Disease
# 计算因变量和所有自变量的欧几里得距离矩阵
dist_matrix_y <- dist(y, method = "euclidean")
# 创建存储 Mantel 相关性的数据框
mantel_results <- data.frame(
variable = names(X),
Mantel.r = numeric(),
p.value = numeric(),
stringsAsFactors = FALSE
)
# 计算 Mantel 检验
for (col in names(X)) {
dist_matrix_X <- dist(X[[col]], method = "euclidean")
mantel_result <- mantel(dist_matrix_X, dist_matrix_y, method = "pearson")
mantel_results[mantel_results$variable == col, ] <- c(
col,
round(mantel_result$statistic, 2),
round(mantel_result$signif, 3)
)
}
# 加载必要的库
library(vegan)
library(linkET)
library(corrr)
library(ggplot2)
# 读取数据
file_path <- "C:/Users/r/Desktop/bayes/data/selection.csv"  # 替换为你的文件路径
df <- read.csv(file_path)
# 删除 'RATIO' 列
df$Plant.Disease <- df$RATIO
df <- df[, !names(df) %in% c("RATIO")]
# 选择所有自变量（除去因变量）
X <- df[, setdiff(names(df), "Plant.Disease")]
# 提取因变量
y <- df$Plant.Disease
# 计算因变量和所有自变量的欧几里得距离矩阵
dist_matrix_y <- dist(y, method = "euclidean")
# 创建存储 Mantel 相关性的数据框
mantel_results <- data.frame(
variable = names(X),
Mantel.r = numeric(),
p.value = numeric(),
stringsAsFactors = FALSE
)
# 加载必要的库
library(vegan)
library(linkET)
library(corrr)
library(ggplot2)
# 读取数据
file_path <- "C:/Users/r/Desktop/bayes/data/selection.csv"  # 替换为你的文件路径
df <- read.csv(file_path)
# 删除 'RATIO' 列
df$Plant.Disease <- df$RATIO
df <- df[, !names(df) %in% c("RATIO")]
# 选择所有自变量（除去因变量）
X <- df[, setdiff(names(df), "Plant.Disease")]
# 提取因变量
y <- df$Plant.Disease
# 计算因变量和所有自变量的欧几里得距离矩阵
dist_matrix_y <- dist(y, method = "euclidean")
# 创建存储 Mantel 相关性的数据框
mantel_results <- data.frame(
variable = names(X),
Mantel.r = numeric(),
p.value = numeric(),
stringsAsFactors = FALSE
)
# 加载必要的库
library(vegan)
library(linkET)
library(corrr)
library(ggplot2)
# 读取数据
file_path <- "C:/Users/r/Desktop/bayes/data/selection.csv"  # 替换为你的文件路径
df <- read.csv(file_path)
# 删除 'RATIO' 列
df$Plant.Disease <- df$RATIO
df <- df[, !names(df) %in% c("RATIO")]
# 选择所有自变量（除去因变量）
X <- df[, setdiff(names(df), "Plant.Disease")]
# 提取因变量
y <- df$Plant.Disease
# 计算因变量和所有自变量的欧几里得距离矩阵
dist_matrix_y <- dist(y, method = "euclidean")
# 创建存储 Mantel 相关性的数据框
# 创建存储 Mantel 相关性的数据框
mantel_results <- data.frame(
variable = names(X),
Mantel.r = numeric(length(names(X))),  # 预分配相同长度的向量
p.value = numeric(length(names(X))),
stringsAsFactors = FALSE
)
# 计算 Mantel 检验
for (col in names(X)) {
dist_matrix_X <- dist(X[[col]], method = "euclidean")
mantel_result <- mantel(dist_matrix_X, dist_matrix_y, method = "pearson")
mantel_results[mantel_results$variable == col, ] <- c(
col,
round(mantel_result$statistic, 2),
round(mantel_result$signif, 3)
)
}
# 转换成相关性矩阵
mantel_matrix <- as.matrix(mantel_results[, c("Mantel.r")])
rownames(mantel_matrix) <- mantel_results$variable
colnames(mantel_matrix) <- "Plant.Disease"
# 转换为 corrr 兼容对象
mantel_cormat <- as_cordf(mantel_matrix)
# 加载必要的库
library(vegan)
library(linkET)
library(ggplot2)
library(dplyr)
# 读取数据
file_path <- "C:/Users/r/Desktop/bayes/data/selection.csv"  # 替换为你的文件路径
df <- read.csv(file_path)
# 删除 'RATIO' 列
df$Plant.Disease <- df$RATIO
df <- df[, !names(df) %in% c("RATIO")]
# 选择所有自变量（除去因变量）
X <- df[, setdiff(names(df), "Plant.Disease")]
# 提取因变量
y <- df$Plant.Disease
# 计算因变量的欧几里得距离矩阵
dist_matrix_y <- dist(y, method = "euclidean")
# 计算 Mantel 检验
mantel_results <- lapply(names(X), function(col) {
dist_matrix_X <- dist(X[[col]], method = "euclidean")
mantel_result <- mantel(dist_matrix_X, dist_matrix_y, method = "pearson")
data.frame(
variable = col,
Mantel.r = round(mantel_result$statistic, 2),
p.value = round(mantel_result$signif, 3),
Significance = ifelse(mantel_result$signif < 0.05, "Significant", "Not Significant")
)
}) %>% bind_rows()
# 转换成矩阵
mantel_matrix <- matrix(
mantel_results$Mantel.r,
nrow = length(mantel_results$variable),
dimnames = list(mantel_results$variable, "Plant.Disease")
)
# 转换为 cor_md_tbl 兼容对象
mantel_cormat <- spread_cordf(mantel_matrix)
# 加载必要的库
library(vegan)
library(linkET)
library(corrr)
library(ggplot2)
# 读取数据
file_path <- "C:/Users/r/Desktop/bayes/data/selection.csv"  # 替换为你的文件路径
df <- read.csv(file_path)
# 删除 'RATIO' 列
df$Plant.Disease <- df$RATIO
df <- df[, !names(df) %in% c("RATIO")]
# 选择所有自变量（除去因变量）
X <- df[, setdiff(names(df), "Plant.Disease")]
# 提取因变量
y <- df$Plant.Disease
# 计算因变量和所有自变量的欧几里得距离矩阵
dist_matrix_y <- dist(y, method = "euclidean")
# 创建存储 Mantel 相关性的数据框
mantel_results <- data.frame(
variable = names(X),
Mantel.r = numeric(length(names(X))),  # 预分配相同长度的向量
p.value = numeric(length(names(X))),
stringsAsFactors = FALSE
)
# 计算 Mantel 检验
for (col in names(X)) {
dist_matrix_X <- dist(X[[col]], method = "euclidean")
mantel_result <- mantel(dist_matrix_X, dist_matrix_y, method = "pearson")
mantel_results[mantel_results$variable == col, ] <- c(
col,
round(mantel_result$statistic, 2),
round(mantel_result$signif, 3)
)
}
# 转换成相关性矩阵
mantel_matrix <- as.matrix(mantel_results[, c("Mantel.r")])
rownames(mantel_matrix) <- mantel_results$variable
colnames(mantel_matrix) <- "Plant.Disease"
# 转换为 corrr 兼容对象
mantel_cormat <- as_cordf(mantel_matrix)
# 转换成相关性矩阵
mantel_matrix <- as.matrix(mantel_results[, c("Mantel.r")])
# Add an extra row and column for the Plant.Disease variable to create a square matrix
mantel_matrix <- rbind(mantel_matrix, c(NA))
mantel_matrix <- cbind(mantel_matrix, c(NA))
rownames(mantel_matrix) <- c(mantel_results$variable, "Plant.Disease")
colnames(mantel_matrix) <- c("Plant.Disease", "Plant.Disease")
# Convert the matrix to cor_md_tbl for qcorrplot
mantel_cormat <- as_cordf(mantel_matrix)
mantel_matrix
qcorrplot(correlate(mtcars), type = "upper") +
geom_square()
qcorrplot(correlate(mtcars), type = "upper") +
geom_square()
qcorrplot(correlate(mtcars), type = "upper") +
geom_square()
qcorrplot(correlate(mtcars), type = "upper") +
geom_square()
library(dplyr)
#>
#> 载入程辑包：'dplyr'
#> The following objects are masked from 'package:stats':
#>
#>     filter, lag
#> The following objects are masked from 'package:base':
#>
#>     intersect, setdiff, setequal, union
data("varechem", package = "vegan")
data("varespec", package = "vegan")
mantel <- mantel_test(varespec, varechem,
spec_select = list(Spec01 = 1:7,
Spec02 = 8:18,
Spec03 = 19:37,
Spec04 = 38:44)) %>%
mutate(rd = cut(r, breaks = c(-Inf, 0.2, 0.4, Inf),
labels = c("< 0.2", "0.2 - 0.4", ">= 0.4")),
pd = cut(p, breaks = c(-Inf, 0.01, 0.05, Inf),
labels = c("< 0.01", "0.01 - 0.05", ">= 0.05")))
library(vegan)
data("varespec")
data("varechem")
## set group id of `spec` on columns by `spec_select`
mantel_test(varespec, varechem,
spec_select = list(spec01 = 1:5, spec02 = 6:12))
data("varespec")
View(varechem)
View(varespec)
library(dplyr)
#>
#> 载入程辑包：'dplyr'
#> The following objects are masked from 'package:stats':
#>
#>     filter, lag
#> The following objects are masked from 'package:base':
#>
#>     intersect, setdiff, setequal, union
data("varechem", package = "vegan")
data("varespec", package = "vegan")
mantel <- mantel_test(varespec, varechem,
spec_select = list(Spec01 = 1:7,
Spec02 = 8:18,
Spec03 = 19:37,
Spec04 = 38:44)) %>%
mutate(rd = cut(r, breaks = c(-Inf, 0.2, 0.4, Inf),
labels = c("< 0.2", "0.2 - 0.4", ">= 0.4")),
pd = cut(p, breaks = c(-Inf, 0.01, 0.05, Inf),
labels = c("< 0.01", "0.01 - 0.05", ">= 0.05")))
mantel
# 加载必要的库
library(vegan)
library(linkET)
library(corrr)
library(ggplot2)
# 读取数据
setwd("C:/Users/r/Desktop/bayes")
# 读取数据
file_path = "C:/Users/r/Desktop/bayes/data/selection.csv"  # 替换为你的文件路径
data <- read.csv(file_path)
library(dplyr)
# 假设你的数据框是 data
data <- data %>%
rename(`Pathogen Load` = RATIO)
xxxx <- df[, setdiff(names(df), `Pathogen Load`)]
xxxx <- df[, setdiff(names(df), "Pathogen Load")]
# 提取因变量
yyyy <- df$`Pathogen Load`
mantel <- mantel_test(yyyy, xxxx,
spec_select = list(Spec01 = 1:7,
Spec02 = 8:18,
Spec03 = 19:37,
Spec04 = 38:44)) %>%
mutate(rd = cut(r, breaks = c(-Inf, 0.2, 0.4, Inf),
labels = c("< 0.2", "0.2 - 0.4", ">= 0.4")),
pd = cut(p, breaks = c(-Inf, 0.01, 0.05, Inf),
labels = c("< 0.01", "0.01 - 0.05", ">= 0.05")))
mantel
qcorrplot(correlate(xxxx), type = "lower", diag = FALSE) +
geom_square() +
geom_couple(aes(colour = pd, size = rd),
data = mantel,
curvature = nice_curvature()) +
scale_fill_gradientn(colours = RColorBrewer::brewer.pal(11, "RdBu")) +
scale_size_manual(values = c(0.5, 1, 2)) +
scale_colour_manual(values = color_pal(3)) +
guides(size = guide_legend(title = "Mantel's r",
override.aes = list(colour = "grey35"),
order = 2),
colour = guide_legend(title = "Mantel's p",
override.aes = list(size = 3),
order = 1),
fill = guide_colorbar(title = "Pearson's r", order = 3))
